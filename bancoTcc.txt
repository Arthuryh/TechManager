create database db_tech;
use db_tech;

create table tb_usuario(
idUsuario int auto_increment primary key,
nome varchar(50),
rg varchar(11),
login varchar(50),
senha varchar(50),
email varchar(50),
tipoUsu int(1),
foto varchar(110),
aula varchar(20)
);

insert into tb_usuario(nome,rg,login,senha,email,tipoUsu,foto,aula)
values("Agostinho","123456789","adm","123","aaaa@gmail.com",3,"","");

create table advertencia(
idAdv int auto_increment primary key auto_increment,
nomeTec varchar(50),
justificativa varchar (50),
advertencia varchar(50),
idProb int ,


foreign key (idProb) references problema(idProb)

);

create table problema(
idProb int auto_increment primary key,
aula varchar(20),
professor varchar(50),
idMaquina varchar(20),
problema varchar(50),
dataProb datetime,
resolvido varchar(10),
advertido varchar(10),
justificado varchar(10)
);



DELIMITER $
 
CREATE TRIGGER advertido AFTER INSERT
ON advertencia
FOR EACH ROW
BEGIN
    UPDATE problema SET advertido = "S"
WHERE idProb = NEW.idProb;

END$
/*---------------------	*/
DELIMITER ;
DELIMITER $
 
CREATE TRIGGER justificado after update
ON advertencia
FOR EACH ROW
BEGIN
    UPDATE problema SET justificado = "S"
WHERE idProb = NEW.idProb;

END$
DELIMITER ;

DELIMITER $
 
CREATE TRIGGER justificado after update
ON advertencia
FOR EACH ROW
BEGIN
    UPDATE problema SET justificado = "S"
WHERE idProb = NEW.idProb;

END$
DELIMITER ;
DROP trigger JUSTIFICADO;


SELECT * FROM problema order by dataProb desc;

select * from tb_usuario;

select * from advertencia;

drop table problema;

drop table tb_usuario;

drop table advertencia;

SELECT * FROM problema;